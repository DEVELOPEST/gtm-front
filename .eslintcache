[{"/home/tavo/git/gtm-front/src/index.js":"1","/home/tavo/git/gtm-front/src/App.js":"2","/home/tavo/git/gtm-front/src/serviceWorker.js":"3","/home/tavo/git/gtm-front/src/store/store.js":"4","/home/tavo/git/gtm-front/src/Auth.js":"5","/home/tavo/git/gtm-front/src/assets/icons/index.js":"6","/home/tavo/git/gtm-front/src/containers/TheLayout.js":"7","/home/tavo/git/gtm-front/src/views/pages/login/Login.js":"8","/home/tavo/git/gtm-front/src/views/pages/register/Register.js":"9","/home/tavo/git/gtm-front/src/views/pages/page404/Page404.js":"10","/home/tavo/git/gtm-front/src/views/pages/page500/Page500.js":"11","/home/tavo/git/gtm-front/src/constants.js":"12","/home/tavo/git/gtm-front/src/models/index.js":"13","/home/tavo/git/gtm-front/src/containers/index.js":"14","/home/tavo/git/gtm-front/src/utils/setAuthHeader.js":"15","/home/tavo/git/gtm-front/src/utils/hooks/hooks.js":"16","/home/tavo/git/gtm-front/src/utils/inputValidations.js":"17","/home/tavo/git/gtm-front/src/api/index.js":"18","/home/tavo/git/gtm-front/src/reusable/CustomLoader.js":"19","/home/tavo/git/gtm-front/src/models/groupsModel.js":"20","/home/tavo/git/gtm-front/src/models/authModel.js":"21","/home/tavo/git/gtm-front/src/models/usersModel.js":"22","/home/tavo/git/gtm-front/src/models/rolesModel.js":"23","/home/tavo/git/gtm-front/src/models/sidebarModel.js":"24","/home/tavo/git/gtm-front/src/containers/TheContent.js":"25","/home/tavo/git/gtm-front/src/containers/TheHeader.js":"26","/home/tavo/git/gtm-front/src/containers/TheFooter.js":"27","/home/tavo/git/gtm-front/src/models/timelineModel.js":"28","/home/tavo/git/gtm-front/src/containers/TheSidebar.js":"29","/home/tavo/git/gtm-front/src/models/activityTimelineModel.js":"30","/home/tavo/git/gtm-front/src/models/dashboardInputsModel.js":"31","/home/tavo/git/gtm-front/src/containers/TheHeaderSettingsDropdown.js":"32","/home/tavo/git/gtm-front/src/containers/_nav.js":"33","/home/tavo/git/gtm-front/src/routes/adminRoutes.js":"34","/home/tavo/git/gtm-front/src/routes/routes.js":"35","/home/tavo/git/gtm-front/src/views/users/Users.js":"36","/home/tavo/git/gtm-front/src/views/dashboard/Dashboard.js":"37","/home/tavo/git/gtm-front/src/views/charts/ExampleChart.js":"38","/home/tavo/git/gtm-front/src/views/charts/MainChart.js":"39","/home/tavo/git/gtm-front/src/views/charts/ActivityChart.js":"40","/home/tavo/git/gtm-front/src/views/charts/SubdirsChart.js":"41","/home/tavo/git/gtm-front/src/models/subdirsTimelineModel.js":"42"},{"size":770,"mtime":1611137596962,"results":"43","hashOfConfig":"44"},{"size":1480,"mtime":1612248625902,"results":"45","hashOfConfig":"44"},{"size":5908,"mtime":1611137596962,"results":"46","hashOfConfig":"44"},{"size":213,"mtime":1611137596962,"results":"47","hashOfConfig":"44"},{"size":2296,"mtime":1612248625902,"results":"48","hashOfConfig":"44"},{"size":3670,"mtime":1611137596962,"results":"49","hashOfConfig":"44"},{"size":1233,"mtime":1612248625902,"results":"50","hashOfConfig":"44"},{"size":4873,"mtime":1612248625906,"results":"51","hashOfConfig":"44"},{"size":5179,"mtime":1612248625906,"results":"52","hashOfConfig":"44"},{"size":1294,"mtime":1611137596962,"results":"53","hashOfConfig":"44"},{"size":1313,"mtime":1611137596962,"results":"54","hashOfConfig":"44"},{"size":572,"mtime":1612360055461,"results":"55","hashOfConfig":"44"},{"size":752,"mtime":1612341765749,"results":"56","hashOfConfig":"44"},{"size":262,"mtime":1611137596962,"results":"57","hashOfConfig":"44"},{"size":129,"mtime":1612248625906,"results":"58","hashOfConfig":"44"},{"size":460,"mtime":1612248625906,"results":"59","hashOfConfig":"44"},{"size":742,"mtime":1612248625906,"results":"60","hashOfConfig":"44"},{"size":1479,"mtime":1612342363686,"results":"61","hashOfConfig":"44"},{"size":264,"mtime":1612248625906,"results":"62","hashOfConfig":"44"},{"size":1025,"mtime":1612248625902,"results":"63","hashOfConfig":"44"},{"size":1762,"mtime":1612248625902,"results":"64","hashOfConfig":"44"},{"size":776,"mtime":1612248625906,"results":"65","hashOfConfig":"44"},{"size":653,"mtime":1612248625906,"results":"66","hashOfConfig":"44"},{"size":226,"mtime":1611137596962,"results":"67","hashOfConfig":"44"},{"size":1762,"mtime":1612248625902,"results":"68","hashOfConfig":"44"},{"size":2176,"mtime":1612248625902,"results":"69","hashOfConfig":"44"},{"size":231,"mtime":1611137596962,"results":"70","hashOfConfig":"44"},{"size":1321,"mtime":1612348777885,"results":"71","hashOfConfig":"44"},{"size":1300,"mtime":1611137596962,"results":"72","hashOfConfig":"44"},{"size":1333,"mtime":1612348777885,"results":"73","hashOfConfig":"44"},{"size":821,"mtime":1612248625902,"results":"74","hashOfConfig":"44"},{"size":993,"mtime":1612248625902,"results":"75","hashOfConfig":"44"},{"size":328,"mtime":1611137596962,"results":"76","hashOfConfig":"44"},{"size":220,"mtime":1612248625906,"results":"77","hashOfConfig":"44"},{"size":261,"mtime":1612248625906,"results":"78","hashOfConfig":"44"},{"size":3359,"mtime":1612248625906,"results":"79","hashOfConfig":"44"},{"size":4522,"mtime":1612341573922,"results":"80","hashOfConfig":"44"},{"size":1748,"mtime":1612353308049,"results":"81","hashOfConfig":"44"},{"size":2065,"mtime":1611137596962,"results":"82","hashOfConfig":"44"},{"size":2205,"mtime":1612353897202,"results":"83","hashOfConfig":"44"},{"size":2607,"mtime":1612359916421,"results":"84","hashOfConfig":"44"},{"size":1587,"mtime":1612348677484,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"jao7r9",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"88"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/home/tavo/git/gtm-front/src/index.js",[],["187","188"],"/home/tavo/git/gtm-front/src/App.js",[],"/home/tavo/git/gtm-front/src/serviceWorker.js",[],"/home/tavo/git/gtm-front/src/store/store.js",[],"/home/tavo/git/gtm-front/src/Auth.js",[],"/home/tavo/git/gtm-front/src/assets/icons/index.js",[],"/home/tavo/git/gtm-front/src/containers/TheLayout.js",["189"],"import React, {useEffect, useState} from 'react'\nimport {\n  TheContent,\n  TheSidebar,\n  TheFooter,\n  TheHeader\n} from './index'\nimport IdleTimer from \"react-idle-timer\";\nimport {useInterval} from \"../utils/hooks/hooks\";\nimport {useStoreActions} from \"easy-peasy\";\nimport {hasAnyRole} from \"../Auth\";\nimport {ADMIN, LECTURER, USER} from \"../constants\";\nimport setAuthHeader from \"../utils/setAuthHeader\";\n\nconst TheLayout = () => {\n    const [userActive, setUserActive] = useState(true);\n    const {fetchToken} = useStoreActions(actions => actions.auth);\n\n    useEffect(() => {\n        setAuthHeader(localStorage.getItem('token'))\n        fetchToken()\n    }, [])\n\n    useInterval(() => {\n        if (userActive && hasAnyRole([USER, LECTURER, ADMIN])) {\n            fetchToken();\n            setUserActive(false);\n        }\n    }, 100000);\n\n    const onAction = () => {\n        setUserActive(true);\n    }\n\n    return (\n    <div className=\"c-app c-default-layout\">\n      <IdleTimer onAction={() => onAction()}/>\n      <TheSidebar/>\n      <div className=\"c-wrapper\">\n        <TheHeader/>\n        <div className=\"c-body\">\n          <TheContent/>\n        </div>\n        <TheFooter/>\n      </div>\n    </div>\n  )\n}\n\nexport default TheLayout\n","/home/tavo/git/gtm-front/src/views/pages/login/Login.js",["190","191","192"],"import React, {useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\nimport CustomLoader from \"../../../reusable/CustomLoader\";\nimport {\n  emailValidation,\n  passwordValidation,\n} from \"../../../utils/inputValidations\"\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailErrors, setEmailErrors] = useState([]);\n  const [passwordErrors, setPasswordErrors] = useState([]);\n\n  const {loading, errors} = useStoreState(state => state.auth)\n  const {login, setErrors} = useStoreActions(actions => actions.auth)\n\n  const onClickLogin = () => {\n    if (emailErrors.length === 0 && passwordErrors.length === 0 ) {\n      login({'email': email, 'password': password})\n    }\n  }\n\n  const handleChangeEmail = value => {\n    setEmail(value)\n    setEmailErrors(emailValidation(value))\n  }\n\n  const handleChangePassword = value => {\n    setPassword(value)\n    setPasswordErrors(passwordValidation(value))\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          @\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                          className={(emailErrors.length === 0 ? \"\" : \" red-border\")}\n                          onChange={event => handleChangeEmail(event.target.value)}\n                          type=\"text\"\n                          placeholder=\"Email\"\n                          autoComplete=\"email\" />\n                    </CInputGroup>\n                    {emailErrors.map((value) => {\n                      return <small className=\"form-text text-muted color-red mb-2\">{value}</small>\n                    })}\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                          className={(passwordErrors.length === 0 ? \"\" : \" red-border\")}\n                          onChange={event => handleChangePassword(event.target.value)}\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          autoComplete=\"current-password\" />\n                    </CInputGroup>\n                    {passwordErrors.map((value) => {\n                      return <div><small className=\"form-text text-muted color-red mb-3\">{value}</small></div>\n                    })}\n                    <CRow>\n                      <CCol xs=\"6\">\n                        {\n                          loading\n                              ?\n                                <div className='col small-loader-container' >\n                                  <CustomLoader />\n                                </div>\n\n                              : <CButton onClick={onClickLogin} color=\"primary\" className=\"px-4\">Login</CButton>\n                        }\n                      </CCol>\n                      <CCol xs=\"6\" className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                      labore et dolore magna aliqua.</p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","/home/tavo/git/gtm-front/src/views/pages/register/Register.js",["193","194","195","196"],"import React, {useEffect, useState} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\nimport CustomLoader from \"../../../reusable/CustomLoader\";\n\nimport {\n  emailValidation,\n  passwordValidation,\n  passwordRepeatValidation\n} from \"../../../utils/inputValidations\"\n\nconst Register = () => {\n\n  const {loading, errors} = useStoreState(state => state.auth)\n  const {register, setErrors} = useStoreActions(actions => actions.auth)\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordRepeat, setPasswordRepeat] = useState('');\n  const [emailErrors, setEmailErrors] = useState([]);\n  const [passwordErrors, setPasswordErrors] = useState([]);\n  const [passwordRepeatErrors, setPasswordRepeatErrors] = useState([]);\n\n  useEffect(() => {\n    // setErrors([])\n  })\n\n  const onClickRegister = () => {\n    if (emailErrors.length === 0 && passwordErrors.length === 0 && passwordRepeatErrors.length === 0) {\n      register(\n          {\n            'user': {\n              'email': email,\n              'password': password\n            }\n          }\n      )\n    }\n  }\n\n  const handleChangeEmail = value => {\n    setEmail(value)\n    setEmailErrors(emailValidation(value))\n  }\n\n  const handleChangePassword = value => {\n    setPassword(value)\n    setPasswordErrors(passwordValidation(value))\n  }\n\n  const handleChangePasswordRepeat = value => {\n    setPasswordRepeat(value)\n    setPasswordRepeatErrors(passwordRepeatValidation(password, value))\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Register</h1>\n                  <p className=\"text-muted\">Create your account</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                        className={(emailErrors.length === 0 ? \"\" : \" red-border\")}\n                        onChange={event => handleChangeEmail(event.target.value)}\n                        type=\"text\"\n                        placeholder=\"Email\"\n                        autoComplete=\"email\" />\n\n                  </CInputGroup>\n                  {emailErrors.map((value) => {\n                    return <small className=\"form-text text-muted color-red mb-2\">{value}</small>\n                  })}\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                        className={(passwordErrors.length === 0 ? \"\" : \" red-border\")}\n                        onChange={event => handleChangePassword(event.target.value)}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"new-password\" />\n\n                  </CInputGroup>\n                  {passwordErrors.map((value) => {\n                    return <div><small className=\"form-text text-muted color-red mb-2\">{value}</small></div>\n                  })}\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                        className={(passwordRepeatErrors.length === 0 ? \"\" : \" red-border\")}\n                        onChange={event => handleChangePasswordRepeat(event.target.value)}\n                        type=\"password\"\n                        placeholder=\"Repeat password\"\n                        autoComplete=\"new-password\" />\n\n                  </CInputGroup>\n                  {passwordRepeatErrors.map((value) => {\n                    return <small className=\"form-text text-muted color-red mb-3\">{value}</small>\n                  })}\n                      {\n                        loading\n                            ?\n                            <div className='row justify-content-center'>\n                              <div className='col small-loader-container' >\n                                <CustomLoader />\n                              </div>\n                            </div>\n                            : <CButton onClick={onClickRegister} color=\"primary\" block>Create Account</CButton>\n                      }\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Register\n","/home/tavo/git/gtm-front/src/views/pages/page404/Page404.js",[],"/home/tavo/git/gtm-front/src/views/pages/page500/Page500.js",[],"/home/tavo/git/gtm-front/src/constants.js",["197"],"/home/tavo/git/gtm-front/src/models/index.js",[],"/home/tavo/git/gtm-front/src/containers/index.js",[],"/home/tavo/git/gtm-front/src/utils/setAuthHeader.js",["198"],"import axios from 'axios';\n\nexport default token => {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\n","/home/tavo/git/gtm-front/src/utils/hooks/hooks.js",[],"/home/tavo/git/gtm-front/src/utils/inputValidations.js",["199"],"if (!Array.prototype.last){\n    Array.prototype.last = function(){\n        return this[this.length - 1];\n    };\n}\n\nexport const emailValidation = value => {\n    let errors = []\n    if (!value) {\n        errors.push(\"Email cannot be empty!\")\n    }\n    if (!value.includes(\"@\")) {\n        errors.push(\"Email must contain @!\")\n    }\n    return errors\n}\n\nexport const passwordValidation = value => {\n    let errors = []\n    if (value.length < 8) {\n        errors.push(\"Password must be at least 8 characters long!\")\n    }\n    return errors\n}\n\nexport const passwordRepeatValidation = (password, passwordRepeat) => {\n    let errors = []\n    if (password !== passwordRepeat) {\n        errors.push(\"Passwords don't match!\")\n    }\n    return errors\n}\n","/home/tavo/git/gtm-front/src/api/index.js",[],"/home/tavo/git/gtm-front/src/reusable/CustomLoader.js",[],"/home/tavo/git/gtm-front/src/models/groupsModel.js",[],"/home/tavo/git/gtm-front/src/models/authModel.js",["200"],"import {action, computed, thunk} from 'easy-peasy';\nimport setAuthHeader from \"../utils/setAuthHeader\";\n\nconst authModel = {\n    errors: [],\n    loading: false,\n    setPasswordRepeat: action((store, payload) => {\n        store.passwordRepeat = payload;\n    }),\n    setErrors: action((store, payload) => {\n        store.errors = payload;\n    }),\n    setLoading: action((store, payload) => {\n        store.loading = payload;\n    }),\n    login: thunk(async (actions, payload, { injections }) => {\n        const { api } = injections;\n\n        actions.setLoading(true)\n        await api.login(payload)\n            .then(data => {\n                setAuthHeader(data.jwt);\n                localStorage.setItem('token', data.jwt)\n                window.location.reload()\n            })\n            .catch(err => {\n                actions.setErrors(err);\n            })\n        actions.setLoading(false)\n    }),\n    register: thunk(async (actions, payload, { injections }) => {\n        const { api } = injections;\n\n        actions.setLoading(true)\n        await api.register(payload)\n            .then(data => {\n                setAuthHeader(data);\n                localStorage.setItem('token', data)\n                window.location.reload()\n            })\n            .catch(err => {\n                actions.setErrors(err);\n            })\n        actions.setLoading(false)\n    }),\n    fetchToken: thunk(async (actions, _payload, { injections }) => {\n        const { api } = injections;\n\n        await api.fetchToken()\n            .then(data => {\n                setAuthHeader(data);\n                localStorage.setItem('token', data)\n            })\n            .catch(err => {\n                actions.setErrors(err);\n            })\n    }),\n};\nexport default authModel;\n","/home/tavo/git/gtm-front/src/models/usersModel.js",[],"/home/tavo/git/gtm-front/src/models/rolesModel.js",["201"],"import {action, thunk, useStoreActions} from 'easy-peasy';\n\nconst rolesModel = {\n    error: '',\n    loading: false,\n    setError: action((store, payload) => {\n        store.error = payload;\n    }),\n    setLoading: action((store, payload) => {\n        store.loading = payload;\n    }),\n    addRole: thunk(async (actions, userId, { injections }) => {\n        const { api } = injections;\n\n        actions.setLoading(true)\n        await api.addRole({\"user\": userId, role: 2})\n            .then(() => {})\n            .catch(err => {\n                actions.setError(err)\n            })\n        actions.setLoading(false)\n    }),\n};\n\nexport default rolesModel;\n","/home/tavo/git/gtm-front/src/models/sidebarModel.js",["202"],"import { action, thunk } from 'easy-peasy';\n\nconst sidebarModel = {\n    sidebarShow: 'responsive',\n    setSidebarShow: action((store, payload) => {\n        store.sidebarShow = payload;\n    }),\n};\n\nexport default sidebarModel;\n","/home/tavo/git/gtm-front/src/containers/TheContent.js",["203"],"import React, { Suspense } from 'react'\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\n\n// routes config\nimport routes from '../routes/routes'\nimport adminRoutes from '../routes/adminRoutes'\nimport {AdminRoute, AnyUserRoute} from \"../Auth\";\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"/>\n  </div>\n)\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <AnyUserRoute\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  component={props => (\n                    <CFade>\n                      <route.component {...props} />\n                    </CFade>\n                  )} />\n              )\n            })}\n              {adminRoutes.map((route, idx) => {\n                  return route.component && (\n                      <AdminRoute\n                          key={idx}\n                          path={route.path}\n                          exact={route.exact}\n                          name={route.name}\n                          component={props => (\n                              <CFade>\n                                  <route.component {...props} />\n                              </CFade>\n                          )} />\n                  )\n              })}\n            <Redirect from=\"/\" to=\"/dashboard\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","/home/tavo/git/gtm-front/src/containers/TheHeader.js",["204"],"import React from \"react\";\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\n\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CHeaderNavItem,\n  CHeaderNavLink,\n  CSubheader,\n  CBreadcrumbRouter,\n  CLink\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {hasAnyRole} from '../Auth';\n\n// routes config\nimport routes from '../routes/routes'\nimport TheHeaderSettingsDropdown from \"./TheHeaderSettingsDropdown\";\n\nconst TheHeader = () => {\n  const {sidebarShow} = useStoreState(state => state.sidebar)\n  const {setSidebarShow} = useStoreActions(actions => actions.sidebar)\n\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n    setSidebarShow(val);\n  }\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n    setSidebarShow(val);\n  }\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\n      </CHeaderBrand>\n\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\n        <CHeaderNavItem className=\"px-3\" >\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\n        </CHeaderNavItem>\n          {hasAnyRole(['ADMIN'])\n              ? <CHeaderNavItem  className=\"px-3\">\n                  <CHeaderNavLink to=\"/users\">Users</CHeaderNavLink>\n              </CHeaderNavItem>\n              : \"\"\n          }\n\n      </CHeaderNav>\n\n      <CHeaderNav className=\"px-3\">\n          <TheHeaderSettingsDropdown/>\n      </CHeaderNav>\n\n      <CSubheader className=\"px-3 justify-content-between\">\n        <CBreadcrumbRouter\n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\n          routes={routes}\n        />\n          <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\n\n          </div>\n      </CSubheader>\n    </CHeader>\n  )\n}\n\nexport default TheHeader;\n","/home/tavo/git/gtm-front/src/containers/TheFooter.js",[],"/home/tavo/git/gtm-front/src/models/timelineModel.js",[],"/home/tavo/git/gtm-front/src/containers/TheSidebar.js",[],"/home/tavo/git/gtm-front/src/models/activityTimelineModel.js",[],"/home/tavo/git/gtm-front/src/models/dashboardInputsModel.js",[],"/home/tavo/git/gtm-front/src/containers/TheHeaderSettingsDropdown.js",["205"],"import React from 'react'\nimport {\n    CBadge,\n    CDropdown,\n    CDropdownItem,\n    CDropdownMenu,\n    CDropdownToggle,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst TheHeaderSettingsDropdown = () => {\n\n    const handleLogOut = () => {\n        localStorage.removeItem('token')\n        window.location.reload()\n    }\n\n    return (\n        <CDropdown\n            inNav\n            className=\"c-header-nav-items mx-2\"\n            direction=\"down\"\n        >\n            <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n                <CIcon name=\"cil-user\" alt=\"User\" />\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n                <CDropdownItem onClick={handleLogOut} >\n                    <CIcon name=\"cil-lock-locked\" className=\"mfe-2\" />\n                    Log out\n                </CDropdownItem>\n            </CDropdownMenu>\n        </CDropdown>\n    )\n}\n\nexport default TheHeaderSettingsDropdown\n","/home/tavo/git/gtm-front/src/containers/_nav.js",[],"/home/tavo/git/gtm-front/src/routes/adminRoutes.js",[],"/home/tavo/git/gtm-front/src/routes/routes.js",[],"/home/tavo/git/gtm-front/src/views/users/Users.js",["206","207"],"import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n    CBadge,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CDataTable,\n    CRow,\n    CPagination,\n} from '@coreui/react'\n\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\n\nconst Users = () => {\n    const {users} = useStoreState(state => state.users)\n    const {fetchUsers} = useStoreActions(actions => actions.users)\n    const {addRole} = useStoreActions(actions => actions.roles)\n    const history = useHistory()\n    const itemsPerPage = 10\n    const maxPage = users.length % itemsPerPage === 0\n        ? users.length / itemsPerPage\n        : Math.floor(users.length / itemsPerPage + 1)\n    const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\n    const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\n    const [page, setPage] = useState(currentPage > maxPage ? maxPage : currentPage)\n\n    const pageChange = newPage => {\n        if (newPage > maxPage) {\n            newPage = maxPage\n        }\n        currentPage !== newPage && history.push(`/users?page=${newPage}`)\n    }\n\n    const handleClick = async id => {\n        await addRole(id)\n        window.location.reload()\n    }\n\n    useEffect(() => {\n        fetchUsers()\n    }, [])\n\n    useEffect(() => {\n\n        currentPage !== page && setPage(currentPage)\n    }, [currentPage, page])\n\n    return (\n        <CRow>\n            <CCol >\n                <CCard>\n                    <CCardHeader>\n                        Users\n                    </CCardHeader>\n                    <CCardBody>\n                        <CDataTable\n                            items={users}\n                            fields={[\n                                { key: 'email', _classes: 'font-weight-bold' },\n                                'roles',\n                                ''\n                            ]}\n                            hover\n                            striped\n                            itemsPerPage={itemsPerPage}\n                            activePage={page}\n                            scopedSlots = {{\n                                '':\n                                    (item)=>(\n                                        <td>\n                                            {item.roles.includes('LECTURER') ? '' :\n                                                <button onClick={() => handleClick(item.id)} className=\"btn btn-info float-right\" color=\"info\">Add\n                                                    Lecturer role</button>\n                                            }\n                                        </td>\n                                    )\n                            }}\n                        />\n                        {\n                            users.length <= itemsPerPage ? ''\n                                :<CPagination\n                                    activePage={page}\n                                    onActivePageChange={pageChange}\n                                    pages={maxPage}\n                                    doubleArrows={false}\n                                    align=\"center\"\n                                />\n                        }\n\n                    </CCardBody>\n                </CCard>\n            </CCol>\n        </CRow>\n    )\n}\n\nexport default Users\n","/home/tavo/git/gtm-front/src/views/dashboard/Dashboard.js",["208","209","210","211","212"],"import React, {lazy, useEffect, useState} from 'react'\nimport SelectDropdown from 'react-dropdown-select';\nimport ReactDatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport {\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n} from '@coreui/react'\n\nimport ExampleChart from '../charts/ExampleChart.js'\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\nimport ActivityChart from \"../charts/ActivityChart\";\nimport SubdirsChart from \"../charts/SubdirsChart\";\n\nconst Dashboard = () => {\n  const {groups, chosenGroup, loading} = useStoreState(state => state.groups)\n  const {fetchGroups, setChosenGroup} = useStoreActions(actions => actions.groups)\n\n  const {startDate, endDate, intervals, chosenInterval} = useStoreState(state => state.dashboardInputs)\n  const {setChosenInterval, setStartDate, setEndDate} = useStoreActions(actions => actions.dashboardInputs)\n\n  const {fetchTimeline} = useStoreActions(actions => actions.timeline)\n  const {fetchSubdirsTimeline} = useStoreActions(actions => actions.subdirsTimeline)\n  const {fetchActivityTimeline} = useStoreActions(actions => actions.activityTimeline)\n\n  useEffect(() => {\n    fetchGroups()\n  }, [fetchGroups])\n\n  useEffect(() => {\n\n    if (chosenGroup !== '' && chosenInterval !== '' && startDate !== '') {\n      fetchTimeline();\n      fetchActivityTimeline();\n      fetchSubdirsTimeline();\n    }\n  }, [chosenGroup])\n\n  useEffect(() => {\n    if (groups.length !== 0 && chosenInterval !== '' && startDate !== '') {\n      fetchTimeline();\n      fetchActivityTimeline();\n      fetchSubdirsTimeline();\n    }\n  }, [chosenInterval])\n\n  useEffect(() => {\n    if (groups.length !== 0 && chosenInterval !== '' && startDate !== '') {\n      fetchTimeline();\n      fetchActivityTimeline();\n      fetchSubdirsTimeline();\n    }\n  }, [startDate])\n\n  const getIntervalOptions = () => {\n    return intervals.map(function(obj) {return {label: obj, value: obj}})\n  }\n\n  const getGroupOptions = () => {\n    return groups.map(function(obj) {return {label: obj.name, value: obj.id, name: obj.name}})\n  }\n\n  return (\n    <>\n      <CCard>\n        <CCardBody>\n          <CRow className=\"justify-content-between\">\n            <CCol className=\"col-12 col-sm-12 col-md-3 col-lg-3\">\n              <div className=\"form-group\">\n                <label>Group:</label>\n                {\n                  loading && groups.length > 0 ? \"loading\" :\n                    <SelectDropdown\n                    options={getGroupOptions()}\n                    onChange={value => setChosenGroup(value[0])}\n                    searchable={true}\n                    values={getGroupOptions().filter(option => option.label === chosenGroup.name)}\n                    />\n                }\n              </div>\n            </CCol>\n            <CCol className=\"col-12 col-sm-12 col-md-3 col-lg-3\">\n              <div className=\"form-group\">\n                <label>Start date:</label>\n                <ReactDatePicker\n                    className=\"w-100\"\n                    selected={startDate}\n                    onChange={date => setStartDate(date)}\n                />\n              </div>\n            </CCol>\n            <CCol className=\"col-12 col-sm-12 col-md-3 col-lg-3\">\n              <div className=\"form-group\">\n                <label>End date:</label>\n                <ReactDatePicker\n                    className=\"w-100\"\n                    selected={endDate}\n                    onChange={date => setEndDate(date)}\n                />\n              </div>\n            </CCol>\n            <CCol className=\"col-12 col-sm-12 col-md-3 col-lg-3\">\n              <div className=\"form-group\">\n                <label>Interval:</label>\n                <SelectDropdown\n                    options={getIntervalOptions()}\n                    onChange={value => setChosenInterval(value[0].value)}\n                    searchable={false}\n                    values={getIntervalOptions().filter(option => option.label === chosenInterval)}\n                />\n              </div>\n            </CCol>\n          </CRow>\n        </CCardBody>\n      </CCard>\n      <CCard>\n        <CCardBody>\n          <h3>Example Chart</h3>\n          <ExampleChart />\n        </CCardBody>\n      </CCard>\n      <CCard>\n        <CCardBody>\n          <h3>Activity Chart</h3>\n          <ActivityChart />\n        </CCardBody>\n      </CCard>\n      <CCard>\n        <CCardBody>\n          <h3>Subdirs Chart</h3>\n          <SubdirsChart />\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default Dashboard\n","/home/tavo/git/gtm-front/src/views/charts/ExampleChart.js",[],"/home/tavo/git/gtm-front/src/views/charts/MainChart.js",["213","214","215","216","217"],"import React, {useEffect} from 'react'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\n\nconst brandSuccess = getStyle('success') || '#4dbd74'\nconst brandInfo = getStyle('info') || '#20a8d8'\nconst brandDanger = getStyle('danger') || '#f86c6b'\n\nconst MainChart = attributes => {\n  const {timeData, labelsData, usersData} = useStoreState(state => state.timeline)\n  const {chosenInterval} = useStoreState(state => state.intervals)\n  const {fetchTimeline} = useStoreActions(actions => actions.timeline)\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        label: 'Hours',\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: timeData\n      },\n      {\n        label: 'Users',\n        // backgroundColor: hexToRgba(brandDanger, 10),\n        borderColor: brandDanger,\n        backgroundColor: 'transparent',\n        pointHoverBackgroundColor: brandDanger,\n        borderWidth: 2,\n        data: usersData\n      }\n\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n\n            },\n            gridLines: {\n              display: true\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3\n          }\n        }\n      }\n    }\n  )()\n\n  // render\n  return (\n      <CChartLine\n          {...attributes}\n          datasets={defaultDatasets}\n          options={defaultOptions}\n          labels={labelsData.map(item => item)}\n      />\n  )\n}\n\n\nexport default MainChart\n",["218","219"],"/home/tavo/git/gtm-front/src/views/charts/ActivityChart.js",["220"],"import {\n    Area,\n    Bar,\n    ComposedChart, ResponsiveContainer,\n    Tooltip,\n    XAxis,\n    YAxis\n} from \"recharts\";\nimport {useStoreState} from \"easy-peasy\";\nimport React from \"react\";\n\nconst ActivityChart = () => {\n    const {data} = useStoreState(state => state.activityTimeline)\n    return (\n        <ResponsiveContainer width=\"100%\" height={400} >\n                <ComposedChart data={data} margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n                    <defs>\n                        <linearGradient id=\"colorUvBlue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#0f7dfa\" stopOpacity={0.7}/>\n                            <stop offset=\"95%\" stopColor=\"#0f7dfa\" stopOpacity={0.0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorUvRed\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#b31414\" stopOpacity={0.7}/>\n                            <stop offset=\"95%\" stopColor=\"#b31414\" stopOpacity={0.0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorUvGreen\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#00b000\" stopOpacity={0.6}/>\n                            <stop offset=\"95%\" stopColor=\"#00b000\" stopOpacity={0.0}/>\n                        </linearGradient>\n                    </defs>\n                    <Tooltip />\n                    <XAxis dataKey=\"label\"/>\n                    <YAxis yAxisId=\"left\" tickCount={10} tickLine={false} axisLine={false} />\n                    <YAxis yAxisId=\"right-lines\" orientation='right' tickCount={10} tickLine={false} axisLine={false} allowDecimals={false}/>\n                    <Area yAxisId=\"left\" type=\"monotoneX\" dataKey=\"time\" stroke=\"#0f7dfa\" fill=\"url(#colorUvBlue)\"/>\n                    <Area yAxisId=\"right-lines\" type=\"monotoneX\" dataKey=\"linesAdded\" stroke=\"#00bf16\" fill=\"url(#colorUvGreen)\"/>\n                    <Area yAxisId=\"right-lines\" type=\"monotoneX\" dataKey=\"linesRemoved\" stroke=\"#bf0000\" fill=\"url(#colorUvRed)\"/>\n                </ComposedChart>\n        </ResponsiveContainer>\n\n    )\n}\n\nexport default ActivityChart;\n","/home/tavo/git/gtm-front/src/views/charts/SubdirsChart.js",["221","222"],"/home/tavo/git/gtm-front/src/models/subdirsTimelineModel.js",[],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":22,"column":8,"nodeType":"229","endLine":22,"endColumn":10,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":1,"column":16,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"235","line":31,"column":19,"nodeType":"233","messageId":"234","endLine":31,"endColumn":25},{"ruleId":"231","severity":1,"message":"236","line":32,"column":17,"nodeType":"233","messageId":"234","endLine":32,"endColumn":26},{"ruleId":"231","severity":1,"message":"237","line":6,"column":3,"nodeType":"233","messageId":"234","endLine":6,"endColumn":14},{"ruleId":"231","severity":1,"message":"235","line":28,"column":19,"nodeType":"233","messageId":"234","endLine":28,"endColumn":25},{"ruleId":"231","severity":1,"message":"236","line":29,"column":20,"nodeType":"233","messageId":"234","endLine":29,"endColumn":29},{"ruleId":"231","severity":1,"message":"238","line":33,"column":10,"nodeType":"233","messageId":"234","endLine":33,"endColumn":24},{"ruleId":"231","severity":1,"message":"239","line":1,"column":8,"nodeType":"233","messageId":"234","endLine":1,"endColumn":13},{"ruleId":"240","severity":1,"message":"241","line":3,"column":1,"nodeType":"242","endLine":5,"endColumn":3},{"ruleId":"243","severity":1,"message":"244","line":2,"column":5,"nodeType":"245","messageId":"246","endLine":4,"endColumn":6},{"ruleId":"231","severity":1,"message":"247","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"248","line":1,"column":24,"nodeType":"233","messageId":"234","endLine":1,"endColumn":39},{"ruleId":"231","severity":1,"message":"249","line":1,"column":18,"nodeType":"233","messageId":"234","endLine":1,"endColumn":23},{"ruleId":"231","severity":1,"message":"250","line":4,"column":3,"nodeType":"233","messageId":"234","endLine":4,"endColumn":8},{"ruleId":"231","severity":1,"message":"251","line":13,"column":3,"nodeType":"233","messageId":"234","endLine":13,"endColumn":8},{"ruleId":"231","severity":1,"message":"252","line":3,"column":5,"nodeType":"233","messageId":"234","endLine":3,"endColumn":11},{"ruleId":"231","severity":1,"message":"252","line":4,"column":5,"nodeType":"233","messageId":"234","endLine":4,"endColumn":11},{"ruleId":"227","severity":1,"message":"253","line":43,"column":8,"nodeType":"229","endLine":43,"endColumn":10,"suggestions":"254"},{"ruleId":"231","severity":1,"message":"255","line":1,"column":16,"nodeType":"233","messageId":"234","endLine":1,"endColumn":20},{"ruleId":"231","severity":1,"message":"256","line":1,"column":33,"nodeType":"233","messageId":"234","endLine":1,"endColumn":41},{"ruleId":"227","severity":1,"message":"257","line":40,"column":6,"nodeType":"229","endLine":40,"endColumn":19,"suggestions":"258"},{"ruleId":"227","severity":1,"message":"259","line":48,"column":6,"nodeType":"229","endLine":48,"endColumn":22,"suggestions":"260"},{"ruleId":"227","severity":1,"message":"261","line":56,"column":6,"nodeType":"229","endLine":56,"endColumn":17,"suggestions":"262"},{"ruleId":"231","severity":1,"message":"232","line":1,"column":16,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"263","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":19},{"ruleId":"231","severity":1,"message":"264","line":6,"column":7,"nodeType":"233","messageId":"234","endLine":6,"endColumn":19},{"ruleId":"231","severity":1,"message":"265","line":12,"column":10,"nodeType":"233","messageId":"234","endLine":12,"endColumn":24},{"ruleId":"231","severity":1,"message":"266","line":13,"column":10,"nodeType":"233","messageId":"234","endLine":13,"endColumn":23},{"ruleId":"223","replacedBy":"267"},{"ruleId":"225","replacedBy":"268"},{"ruleId":"231","severity":1,"message":"269","line":3,"column":5,"nodeType":"233","messageId":"234","endLine":3,"endColumn":8},{"ruleId":"231","severity":1,"message":"270","line":31,"column":33,"nodeType":"233","messageId":"234","endLine":31,"endColumn":41},{"ruleId":"231","severity":1,"message":"271","line":31,"column":43,"nodeType":"233","messageId":"234","endLine":31,"endColumn":48},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchToken'. Either include it or remove the dependency array.","ArrayExpression",["274"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'CCardFooter' is defined but never used.","'passwordRepeat' is assigned a value but never used.","'React' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'computed' is defined but never used.","'useStoreActions' is defined but never used.","'thunk' is defined but never used.","'Route' is defined but never used.","'CLink' is defined but never used.","'CBadge' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["275"],"'lazy' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'chosenInterval', 'fetchActivityTimeline', 'fetchSubdirsTimeline', 'fetchTimeline', and 'startDate'. Either include them or remove the dependency array.",["276"],"React Hook useEffect has missing dependencies: 'fetchActivityTimeline', 'fetchSubdirsTimeline', 'fetchTimeline', 'groups.length', and 'startDate'. Either include them or remove the dependency array.",["277"],"React Hook useEffect has missing dependencies: 'chosenInterval', 'fetchActivityTimeline', 'fetchSubdirsTimeline', 'fetchTimeline', and 'groups.length'. Either include them or remove the dependency array.",["278"],"'CChartBar' is defined but never used.","'brandSuccess' is assigned a value but never used.","'chosenInterval' is assigned a value but never used.","'fetchTimeline' is assigned a value but never used.",["272"],["273"],"'Bar' is defined but never used.","'external' is assigned a value but never used.","'label' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"285","fix":"287"},"Update the dependencies array to be: [fetchToken]",{"range":"288","text":"289"},"Update the dependencies array to be: [fetchUsers]",{"range":"290","text":"291"},"Update the dependencies array to be: [chosenGroup, chosenInterval, fetchActivityTimeline, fetchSubdirsTimeline, fetchTimeline, startDate]",{"range":"292","text":"293"},"Update the dependencies array to be: [chosenInterval, fetchActivityTimeline, fetchSubdirsTimeline, fetchTimeline, groups.length, startDate]",{"range":"294","text":"295"},{"range":"296","text":"295"},[658,660],"[fetchToken]",[1303,1305],"[fetchUsers]",[1392,1405],"[chosenGroup, chosenInterval, fetchActivityTimeline, fetchSubdirsTimeline, fetchTimeline, startDate]",[1599,1615],"[chosenInterval, fetchActivityTimeline, fetchSubdirsTimeline, fetchTimeline, groups.length, startDate]",[1809,1820]]