[{"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\index.js":"1","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\store\\store.js":"2","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\models\\index.js":"3","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\serviceWorker.js":"4","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\App.js":"5","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\models\\sidebarModel.js":"6","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\assets\\icons\\index.js":"7","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\TheLayout.js":"8","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\pages\\login\\Login.js":"9","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\pages\\register\\Register.js":"10","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\pages\\page404\\Page404.js":"11","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\pages\\page500\\Page500.js":"12","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\index.js":"13","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\TheContent.js":"14","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\TheHeader.js":"15","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\TheFooter.js":"16","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\TheSidebar.js":"17","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\routes.js":"18","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\_nav.js":"19","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\dashboard\\Dashboard.js":"20","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\reusable\\index.js":"21","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\api\\index.js":"22","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\constants.js":"23","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\models\\timelineModel.js":"24","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\models\\groupsModel.js":"25","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\models\\intervalsModel.js":"26","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\utils\\dateUtils.js":"27","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\charts\\MainChart.js":"28","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\charts\\ExampleChart.js":"29","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\models\\authModel.js":"30","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\utils\\setAuthHeader.js":"31","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\reusable\\CustomLoader.js":"32","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\utils\\inputValidations.js":"33","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\Auth.js":"34"},{"size":770,"mtime":1610067036416,"results":"35","hashOfConfig":"36"},{"size":223,"mtime":1610069173288,"results":"37","hashOfConfig":"36"},{"size":413,"mtime":1611322850692,"results":"38","hashOfConfig":"36"},{"size":6049,"mtime":1610053568629,"results":"39","hashOfConfig":"36"},{"size":1492,"mtime":1611608327959,"results":"40","hashOfConfig":"36"},{"size":236,"mtime":1610068961172,"results":"41","hashOfConfig":"36"},{"size":3670,"mtime":1611088534537,"results":"42","hashOfConfig":"36"},{"size":413,"mtime":1610068216958,"results":"43","hashOfConfig":"36"},{"size":4873,"mtime":1611608001364,"results":"44","hashOfConfig":"36"},{"size":5179,"mtime":1611328025202,"results":"45","hashOfConfig":"36"},{"size":1294,"mtime":1607966133000,"results":"46","hashOfConfig":"36"},{"size":1313,"mtime":1607966133000,"results":"47","hashOfConfig":"36"},{"size":262,"mtime":1611088200818,"results":"48","hashOfConfig":"36"},{"size":1093,"mtime":1610009615630,"results":"49","hashOfConfig":"36"},{"size":1726,"mtime":1611088158422,"results":"50","hashOfConfig":"36"},{"size":231,"mtime":1611087179486,"results":"51","hashOfConfig":"36"},{"size":1300,"mtime":1611088324282,"results":"52","hashOfConfig":"36"},{"size":260,"mtime":1611087967130,"results":"53","hashOfConfig":"36"},{"size":328,"mtime":1611087127701,"results":"54","hashOfConfig":"36"},{"size":3301,"mtime":1611607504141,"results":"55","hashOfConfig":"36"},{"size":56,"mtime":1610067693949,"results":"56","hashOfConfig":"36"},{"size":780,"mtime":1611323672681,"results":"57","hashOfConfig":"36"},{"size":339,"mtime":1611686852102,"results":"58","hashOfConfig":"36"},{"size":2076,"mtime":1610412635737,"results":"59","hashOfConfig":"36"},{"size":1105,"mtime":1610400621649,"results":"60","hashOfConfig":"36"},{"size":763,"mtime":1610402021607,"results":"61","hashOfConfig":"36"},{"size":1082,"mtime":1610447448070,"results":"62","hashOfConfig":"36"},{"size":2065,"mtime":1611087491830,"results":"63","hashOfConfig":"36"},{"size":859,"mtime":1611157377219,"results":"64","hashOfConfig":"36"},{"size":1946,"mtime":1611328002208,"results":"65","hashOfConfig":"36"},{"size":134,"mtime":1611322335225,"results":"66","hashOfConfig":"36"},{"size":274,"mtime":1611324732651,"results":"67","hashOfConfig":"36"},{"size":774,"mtime":1611327361504,"results":"68","hashOfConfig":"36"},{"size":2387,"mtime":1611687120916,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"7bv09d",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"72"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\index.js",[],["152","153"],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\store\\store.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\models\\index.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\serviceWorker.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\App.js",["154"],"import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './scss/style.scss';\nimport {AnyUserRoute, NonUserRoute, UserRoute} from \"./Auth\";\n\nconst loading = (\n    <div className=\"pt-3 text-center\">\n      <div className=\"sk-spinner sk-spinner-pulse\" />\n    </div>\n)\n\n// Containers\nconst TheLayout = React.lazy(() => import('./containers/TheLayout'));\n\n// Pages\nconst Login = React.lazy(() => import('./views/pages/login/Login'));\nconst Register = React.lazy(() => import('./views/pages/register/Register'));\nconst Page404 = React.lazy(() => import('./views/pages/page404/Page404'));\nconst Page500 = React.lazy(() => import('./views/pages/page500/Page500'));\n\nclass App extends Component {\n\n  render() {\n    return (\n        <HashRouter>\n          <React.Suspense fallback={loading}>\n            <Switch>\n              <NonUserRoute exact path=\"/login\" name=\"Login Page\" component={props => <Login {...props}/>}  />\n              <NonUserRoute exact path=\"/register\" name=\"Register Page\" component={props => <Register {...props}/>} />\n              <Route exact path=\"/404\" name=\"Page 404\" component={props => <Page404 {...props}/>} />\n              <Route exact path=\"/500\" name=\"Page 500\" component={props => <Page500 {...props}/>} />\n              <AnyUserRoute path=\"/\" name=\"Home\" component={props => <TheLayout {...props}/>} />\n            </Switch>\n          </React.Suspense>\n        </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\models\\sidebarModel.js",["155"],"import { action, thunk } from 'easy-peasy';\r\n\r\nconst sidebarModel = {\r\n    sidebarShow: 'responsive',\r\n    setSidebarShow: action((store, payload) => {\r\n        store.sidebarShow = payload;\r\n    }),\r\n};\r\n\r\nexport default sidebarModel;\r\n","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\assets\\icons\\index.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\TheLayout.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\pages\\login\\Login.js",["156","157","158"],"import React, {useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\nimport CustomLoader from \"../../../reusable/CustomLoader\";\nimport {\n  emailValidation,\n  passwordValidation,\n} from \"../../../utils/inputValidations\"\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailErrors, setEmailErrors] = useState([]);\n  const [passwordErrors, setPasswordErrors] = useState([]);\n\n  const {loading, errors} = useStoreState(state => state.auth)\n  const {login, setErrors} = useStoreActions(actions => actions.auth)\n\n  const onClickLogin = () => {\n    if (emailErrors.length === 0 && passwordErrors.length === 0 ) {\n      login({'email': email, 'password': password})\n    }\n  }\n\n  const handleChangeEmail = value => {\n    setEmail(value)\n    setEmailErrors(emailValidation(value))\n  }\n\n  const handleChangePassword = value => {\n    setPassword(value)\n    setPasswordErrors(passwordValidation(value))\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          @\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                          className={(emailErrors.length === 0 ? \"\" : \" red-border\")}\n                          onChange={event => handleChangeEmail(event.target.value)}\n                          type=\"text\"\n                          placeholder=\"Email\"\n                          autoComplete=\"email\" />\n                    </CInputGroup>\n                    {emailErrors.map((value) => {\n                      return <small className=\"form-text text-muted color-red mb-2\">{value}</small>\n                    })}\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                          className={(passwordErrors.length === 0 ? \"\" : \" red-border\")}\n                          onChange={event => handleChangePassword(event.target.value)}\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          autoComplete=\"current-password\" />\n                    </CInputGroup>\n                    {passwordErrors.map((value) => {\n                      return <div><small className=\"form-text text-muted color-red mb-3\">{value}</small></div>\n                    })}\n                    <CRow>\n                      <CCol xs=\"6\">\n                        {\n                          loading\n                              ?\n                                <div className='col small-loader-container' >\n                                  <CustomLoader />\n                                </div>\n\n                              : <CButton onClick={onClickLogin} color=\"primary\" className=\"px-4\">Login</CButton>\n                        }\n                      </CCol>\n                      <CCol xs=\"6\" className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                      labore et dolore magna aliqua.</p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\pages\\register\\Register.js",["159","160","161","162"],"import React, {useEffect, useState} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\nimport CustomLoader from \"../../../reusable/CustomLoader\";\n\nimport {\n  emailValidation,\n  passwordValidation,\n  passwordRepeatValidation\n} from \"../../../utils/inputValidations\"\n\nconst Register = () => {\n\n  const {loading, errors} = useStoreState(state => state.auth)\n  const {register, setErrors} = useStoreActions(actions => actions.auth)\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordRepeat, setPasswordRepeat] = useState('');\n  const [emailErrors, setEmailErrors] = useState([]);\n  const [passwordErrors, setPasswordErrors] = useState([]);\n  const [passwordRepeatErrors, setPasswordRepeatErrors] = useState([]);\n\n  useEffect(() => {\n    // setErrors([])\n  })\n\n  const onClickRegister = () => {\n    if (emailErrors.length === 0 && passwordErrors.length === 0 && passwordRepeatErrors.length === 0) {\n      register(\n          {\n            'user': {\n              'email': email,\n              'password': password\n            }\n          }\n      )\n    }\n  }\n\n  const handleChangeEmail = value => {\n    setEmail(value)\n    setEmailErrors(emailValidation(value))\n  }\n\n  const handleChangePassword = value => {\n    setPassword(value)\n    setPasswordErrors(passwordValidation(value))\n  }\n\n  const handleChangePasswordRepeat = value => {\n    setPasswordRepeat(value)\n    setPasswordRepeatErrors(passwordRepeatValidation(password, value))\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Register</h1>\n                  <p className=\"text-muted\">Create your account</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                        className={(emailErrors.length === 0 ? \"\" : \" red-border\")}\n                        onChange={event => handleChangeEmail(event.target.value)}\n                        type=\"text\"\n                        placeholder=\"Email\"\n                        autoComplete=\"email\" />\n\n                  </CInputGroup>\n                  {emailErrors.map((value) => {\n                    return <small className=\"form-text text-muted color-red mb-2\">{value}</small>\n                  })}\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                        className={(passwordErrors.length === 0 ? \"\" : \" red-border\")}\n                        onChange={event => handleChangePassword(event.target.value)}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"new-password\" />\n\n                  </CInputGroup>\n                  {passwordErrors.map((value) => {\n                    return <div><small className=\"form-text text-muted color-red mb-2\">{value}</small></div>\n                  })}\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                        className={(passwordRepeatErrors.length === 0 ? \"\" : \" red-border\")}\n                        onChange={event => handleChangePasswordRepeat(event.target.value)}\n                        type=\"password\"\n                        placeholder=\"Repeat password\"\n                        autoComplete=\"new-password\" />\n\n                  </CInputGroup>\n                  {passwordRepeatErrors.map((value) => {\n                    return <small className=\"form-text text-muted color-red mb-3\">{value}</small>\n                  })}\n                      {\n                        loading\n                            ?\n                            <div className='row justify-content-center'>\n                              <div className='col small-loader-container' >\n                                <CustomLoader />\n                              </div>\n                            </div>\n                            : <CButton onClick={onClickRegister} color=\"primary\" block>Create Account</CButton>\n                      }\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Register\n","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\pages\\page404\\Page404.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\pages\\page500\\Page500.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\index.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\TheContent.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\TheHeader.js",["163"],"import React from \"react\";\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\n\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CHeaderNavItem,\n  CHeaderNavLink,\n  CSubheader,\n  CBreadcrumbRouter,\n  CLink\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n// routes config\nimport routes from '../routes'\n\nconst TheHeader = () => {\n  const {sidebarShow} = useStoreState(state => state.sidebar)\n  const {setSidebarShow} = useStoreActions(actions => actions.sidebar)\n\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n    setSidebarShow(val);\n  }\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n    setSidebarShow(val);\n  }\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\n      </CHeaderBrand>\n\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\n        <CHeaderNavItem className=\"px-3\" >\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\n        </CHeaderNavItem>\n      </CHeaderNav>\n\n      <CHeaderNav className=\"px-3\">\n\n      </CHeaderNav>\n\n      <CSubheader className=\"px-3 justify-content-between\">\n        <CBreadcrumbRouter\n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\n          routes={routes}\n        />\n      </CSubheader>\n    </CHeader>\n  )\n}\n\nexport default TheHeader;\n","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\TheFooter.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\TheSidebar.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\routes.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\containers\\_nav.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\dashboard\\Dashboard.js",["164","165","166","167","168"],"import React, {lazy, useEffect, useState} from 'react'\nimport SelectDropdown from 'react-dropdown-select';\nimport ReactDatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport {\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n} from '@coreui/react'\n\nimport MainChart from '../charts/MainChart.js'\nimport ExampleChart from '../charts/ExampleChart.js'\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\nimport {hasAnyRole} from \"../../Auth\";\n\nconst Dashboard = () => {\n  const {groups, chosenGroup, loading} = useStoreState(state => state.groups)\n  const {fetchGroups, setChosenGroup} = useStoreActions(actions => actions.groups)\n\n  const {intervals, chosenInterval} = useStoreState(state => state.intervals)\n  const {setChosenInterval} = useStoreActions(actions => actions.intervals)\n\n  const {startDate} = useStoreState(state => state.timeline)\n  const {fetchTimeline, setStartDate} = useStoreActions(actions => actions.timeline)\n\n  console.log(hasAnyRole([\"LECTURER\", \"USER\"]))\n\n\n  useEffect(() => {\n    fetchGroups()\n  }, [fetchGroups])\n\n  useEffect(() => {\n    fetchTimeline(chosenInterval)\n  }, [groups])\n\n  useEffect(() => {\n    fetchTimeline(chosenInterval)\n  }, [chosenInterval])\n\n  useEffect(() => {\n    fetchTimeline(chosenInterval)\n  }, [startDate])\n\n  const getIntervalOptions = () => {\n    return intervals.map(function(obj) {return {label: obj, value: obj}})\n  }\n\n  const getGroupOptions = () => {\n    return groups.map(function(obj) {return {label: obj.name, value: obj.id}})\n  }\n\n  return (\n    <>\n      <CCard>\n        <CCardBody>\n          <CRow className=\"justify-content-between\">\n            <CCol className=\"col-12 col-sm-12 col-md-3 col-lg-3\">\n              <div className=\"form-group\">\n                <label>Group:</label>\n                {\n                  loading && groups.length > 0 ? \"loading\" :\n                    <SelectDropdown\n                    options={getGroupOptions()}\n                    onChange={value => setChosenGroup(value)}\n                    searchable={false}\n                    values={getGroupOptions().filter(option => option.label === chosenGroup.name)}\n                    />\n                }\n              </div>\n            </CCol>\n            <CCol className=\"col-12 col-sm-12 col-md-4 col-lg-3\">\n              <div className=\"form-group\">\n                <label>Date:</label>\n                <ReactDatePicker\n                    className=\"w-100\"\n                    selected={startDate}\n                    onChange={date => setStartDate(date)}\n                />\n              </div>\n            </CCol>\n            <CCol className=\"col-12 col-sm-12 col-md-3 col-lg-3\">\n              <div className=\"form-group\">\n                <label>Period:</label>\n                <SelectDropdown\n                    options={getIntervalOptions()}\n                    onChange={value => setChosenInterval(value[0].value)}\n                    searchable={false}\n                    values={getIntervalOptions().filter(option => option.label === chosenInterval)}\n                />\n              </div>\n            </CCol>\n          </CRow>\n          <MainChart style={{height: '300px', marginTop: '40px'}}/>\n          <ExampleChart />\n        </CCardBody>\n      </CCard>\n\n\n    </>\n  )\n}\n\nexport default Dashboard\n","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\reusable\\index.js",[],["169","170"],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\api\\index.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\constants.js",["171"],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\models\\timelineModel.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\models\\groupsModel.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\models\\intervalsModel.js",["172"],"import {action, computed, thunk} from 'easy-peasy';\r\n\r\nconst intervalsModel = {\r\n    intervals: [\"Day\", \"Week\", \"Month\", \"Year\"],\r\n    chosenInterval: \"Month\",\r\n    error: '',\r\n    loading: false,\r\n    requestInterval: computed( state => {\r\n        switch (state.chosenInterval) {\r\n            case 'Day':\r\n                return 'HOUR';\r\n            case 'Week':\r\n                return 'DAY';\r\n            case 'Month':\r\n                return 'DAY';\r\n            default:\r\n                return 'MONTH';\r\n        }\r\n    }),\r\n    setIntervals: action((store, payload) => {\r\n        store.intervals = payload;\r\n    }),\r\n    setChosenInterval: action((store, payload) => {\r\n        store.chosenInterval = payload;\r\n    }),\r\n};\r\n\r\nexport default intervalsModel;\r\n","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\utils\\dateUtils.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\charts\\MainChart.js",["173","174","175","176","177"],"import React, {useEffect} from 'react'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\n\nconst brandSuccess = getStyle('success') || '#4dbd74'\nconst brandInfo = getStyle('info') || '#20a8d8'\nconst brandDanger = getStyle('danger') || '#f86c6b'\n\nconst MainChart = attributes => {\n  const {timeData, labelsData, usersData} = useStoreState(state => state.timeline)\n  const {chosenInterval} = useStoreState(state => state.intervals)\n  const {fetchTimeline} = useStoreActions(actions => actions.timeline)\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        label: 'Hours',\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: timeData\n      },\n      {\n        label: 'Users',\n        // backgroundColor: hexToRgba(brandDanger, 10),\n        borderColor: brandDanger,\n        backgroundColor: 'transparent',\n        pointHoverBackgroundColor: brandDanger,\n        borderWidth: 2,\n        data: usersData\n      }\n\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n\n            },\n            gridLines: {\n              display: true\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3\n          }\n        }\n      }\n    }\n  )()\n\n  // render\n  return (\n      <CChartLine\n          {...attributes}\n          datasets={defaultDatasets}\n          options={defaultOptions}\n          labels={labelsData.map(item => item)}\n      />\n  )\n}\n\n\nexport default MainChart\n","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\views\\charts\\ExampleChart.js",["178","179","180"],"import {Bar, CartesianGrid, ComposedChart, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\nimport {useStoreState} from \"easy-peasy\";\r\nimport React from \"react\";\r\n\r\nconst ExampleChart = () => {\r\n    const {data} = useStoreState(state => state.timeline)\r\n    return (\r\n        //     <ResponsiveContainer width=\"100%\" height=\"100%\" >\r\n                <ComposedChart width={500} height={300} data={data}>\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis\r\n                    />\r\n                    <CartesianGrid vertical={false} />\r\n                    <Line type=\"monotone\" dataKey=\"time\" stroke=\"#8884d8\" />\r\n                    <Bar type=\"monotone\" dataKey=\"time\" stroke=\"#8884d8\" />\r\n                </ComposedChart>\r\n        //     </ResponsiveContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default ExampleChart;\r\n","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\models\\authModel.js",["181"],"import {action, computed, thunk} from 'easy-peasy';\r\nimport setAuthHeader from \"../utils/setAuthHeader\";\r\n\r\nconst authModel = {\r\n    errors: [],\r\n    loading: false,\r\n    setPasswordRepeat: action((store, payload) => {\r\n        store.passwordRepeat = payload;\r\n    }),\r\n    setErrors: action((store, payload) => {\r\n        store.errors = payload;\r\n    }),\r\n    setLoading: action((store, payload) => {\r\n        store.loading = payload;\r\n    }),\r\n    login: thunk(async (actions, payload, { injections }) => {\r\n        const { api } = injections;\r\n\r\n        actions.setLoading(true)\r\n        await api.login(payload)\r\n            .then(data => {\r\n                console.log(data)\r\n                setAuthHeader(data.jwt);\r\n                localStorage.setItem('token', data.jwt)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                actions.setErrors(err);\r\n            })\r\n        actions.setLoading(false)\r\n    }),\r\n    register: thunk(async (actions, payload, { injections }) => {\r\n        const { api } = injections;\r\n\r\n        actions.setLoading(true)\r\n        await api.register(payload)\r\n            .then(data => {\r\n                console.log(data)\r\n                setAuthHeader(data);\r\n                localStorage.setItem('token', data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                actions.setErrors(err);\r\n            })\r\n        actions.setLoading(false)\r\n    }),\r\n    fetchToken: thunk(async (actions, _payload, { injections }) => {\r\n        const { api } = injections;\r\n\r\n        await api.fetchToken()\r\n            .then(data => {\r\n                console.log(data)\r\n                setAuthHeader(data);\r\n                localStorage.setItem('token', data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                actions.setErrors(err);\r\n            })\r\n    }),\r\n};\r\n\r\nexport default authModel;\r\n","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\utils\\setAuthHeader.js",["182"],"import axios from 'axios';\r\n\r\nexport default token => {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n};\r\n","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\reusable\\CustomLoader.js",[],"C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\utils\\inputValidations.js",["183"],"if (!Array.prototype.last){\r\n    Array.prototype.last = function(){\r\n        return this[this.length - 1];\r\n    };\r\n}\r\n\r\nexport const emailValidation = value => {\r\n    let errors = []\r\n    if (!value) {\r\n        errors.push(\"Email cannot be empty!\")\r\n    }\r\n    if (!value.includes(\"@\")) {\r\n        errors.push(\"Email must contain @!\")\r\n    }\r\n    return errors\r\n}\r\n\r\nexport const passwordValidation = value => {\r\n    let errors = []\r\n    if (value.length < 8) {\r\n        errors.push(\"Password must be at least 8 characters long!\")\r\n    }\r\n    return errors\r\n}\r\n\r\nexport const passwordRepeatValidation = (password, passwordRepeat) => {\r\n    let errors = []\r\n    if (password !== passwordRepeat) {\r\n        errors.push(\"Passwords don't match!\")\r\n    }\r\n    return errors\r\n}\r\n","C:\\Users\\Marten\\IdeaProjects\\gtm-front\\src\\Auth.js",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":4,"column":37,"nodeType":"190","messageId":"191","endLine":4,"endColumn":46},{"ruleId":"188","severity":1,"message":"192","line":12,"column":21,"nodeType":"190","messageId":"191","endLine":12,"endColumn":24},{"ruleId":"188","severity":1,"message":"193","line":1,"column":16,"nodeType":"190","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"188","severity":1,"message":"194","line":31,"column":19,"nodeType":"190","messageId":"191","endLine":31,"endColumn":25},{"ruleId":"188","severity":1,"message":"195","line":32,"column":17,"nodeType":"190","messageId":"191","endLine":32,"endColumn":26},{"ruleId":"188","severity":1,"message":"196","line":6,"column":3,"nodeType":"190","messageId":"191","endLine":6,"endColumn":14},{"ruleId":"188","severity":1,"message":"194","line":28,"column":19,"nodeType":"190","messageId":"191","endLine":28,"endColumn":25},{"ruleId":"188","severity":1,"message":"195","line":29,"column":20,"nodeType":"190","messageId":"191","endLine":29,"endColumn":29},{"ruleId":"188","severity":1,"message":"197","line":33,"column":10,"nodeType":"190","messageId":"191","endLine":33,"endColumn":24},{"ruleId":"188","severity":1,"message":"198","line":13,"column":3,"nodeType":"190","messageId":"191","endLine":13,"endColumn":8},{"ruleId":"188","severity":1,"message":"199","line":1,"column":16,"nodeType":"190","messageId":"191","endLine":1,"endColumn":20},{"ruleId":"188","severity":1,"message":"200","line":1,"column":33,"nodeType":"190","messageId":"191","endLine":1,"endColumn":41},{"ruleId":"201","severity":1,"message":"202","line":37,"column":6,"nodeType":"203","endLine":37,"endColumn":14,"suggestions":"204"},{"ruleId":"201","severity":1,"message":"205","line":41,"column":6,"nodeType":"203","endLine":41,"endColumn":22,"suggestions":"206"},{"ruleId":"201","severity":1,"message":"202","line":45,"column":6,"nodeType":"203","endLine":45,"endColumn":17,"suggestions":"207"},{"ruleId":"184","replacedBy":"208"},{"ruleId":"186","replacedBy":"209"},{"ruleId":"188","severity":1,"message":"210","line":1,"column":8,"nodeType":"190","messageId":"191","endLine":1,"endColumn":13},{"ruleId":"188","severity":1,"message":"211","line":1,"column":27,"nodeType":"190","messageId":"191","endLine":1,"endColumn":32},{"ruleId":"188","severity":1,"message":"193","line":1,"column":16,"nodeType":"190","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"188","severity":1,"message":"212","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":19},{"ruleId":"188","severity":1,"message":"213","line":6,"column":7,"nodeType":"190","messageId":"191","endLine":6,"endColumn":19},{"ruleId":"188","severity":1,"message":"214","line":12,"column":10,"nodeType":"190","messageId":"191","endLine":12,"endColumn":24},{"ruleId":"188","severity":1,"message":"215","line":13,"column":10,"nodeType":"190","messageId":"191","endLine":13,"endColumn":23},{"ruleId":"188","severity":1,"message":"216","line":1,"column":50,"nodeType":"190","messageId":"191","endLine":1,"endColumn":59},{"ruleId":"188","severity":1,"message":"217","line":1,"column":61,"nodeType":"190","messageId":"191","endLine":1,"endColumn":80},{"ruleId":"188","severity":1,"message":"218","line":1,"column":82,"nodeType":"190","messageId":"191","endLine":1,"endColumn":89},{"ruleId":"188","severity":1,"message":"219","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":3,"column":1,"nodeType":"222","endLine":5,"endColumn":3},{"ruleId":"223","severity":1,"message":"224","line":2,"column":5,"nodeType":"225","messageId":"226","endLine":4,"endColumn":6},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'UserRoute' is defined but never used.","Identifier","unusedVar","'api' is assigned a value but never used.","'useEffect' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'CCardFooter' is defined but never used.","'passwordRepeat' is assigned a value but never used.","'CLink' is defined but never used.","'lazy' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chosenInterval' and 'fetchTimeline'. Either include them or remove the dependency array.","ArrayExpression",["229"],"React Hook useEffect has a missing dependency: 'fetchTimeline'. Either include it or remove the dependency array.",["230"],["231"],["227"],["228"],"'React' is defined but never used.","'thunk' is defined but never used.","'CChartBar' is defined but never used.","'brandSuccess' is assigned a value but never used.","'chosenInterval' is assigned a value but never used.","'fetchTimeline' is assigned a value but never used.","'LineChart' is defined but never used.","'ResponsiveContainer' is defined but never used.","'Tooltip' is defined but never used.","'computed' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [chosenInterval, fetchTimeline, groups]",{"range":"238","text":"239"},"Update the dependencies array to be: [chosenInterval, fetchTimeline]",{"range":"240","text":"241"},"Update the dependencies array to be: [chosenInterval, fetchTimeline, startDate]",{"range":"242","text":"243"},[1137,1145],"[chosenInterval, fetchTimeline, groups]",[1207,1223],"[chosenInterval, fetchTimeline]",[1285,1296],"[chosenInterval, fetchTimeline, startDate]"]